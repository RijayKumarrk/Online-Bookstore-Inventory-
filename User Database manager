package project;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
public class UserDatabaseManager {

private Connection conn;  
    public void connect() throws SQLException {  
        String url = "jdbc:mysql://localhost:3306/user_receive";  
        String user = "root";  
        String pass = "sahana@123";  
        conn = DriverManager.getConnection(url, user, pass);  
        System.out.println("User database connection established.");  
    }  
    public void displayBooks() throws SQLException {  
        String sql = "SELECT * FROM admin_orders.collect WHERE is_available = true";  
        Statement stmt = conn.createStatement();  
        ResultSet rs = stmt.executeQuery(sql);  
        System.out.println("\nAvailable Books:");  
        while (rs.next()) {  
            System.out.println(rs.getInt("id") + ". " + rs.getString("title") +  
                               " by " + rs.getString("author") +  
                               " - â‚¹" + rs.getDouble("price"));  
        }  
    }  
    public void borrowBook(int bookId) throws SQLException {  
        String checkSql = "SELECT * FROM admin_orders.collect WHERE id = ? AND is_available = true";  
        PreparedStatement checkStmt = conn.prepareStatement(checkSql);  
        checkStmt.setInt(1, bookId);  
        ResultSet rs = checkStmt.executeQuery();  
        if (rs.next()) {  
            String title = rs.getString("title");  
            String author = rs.getString("author");  
            double price = rs.getDouble("price"); 
            String updateSql = "UPDATE admin_orders.collect SET is_available = false WHERE id = ?";  
            PreparedStatement updateStmt = conn.prepareStatement(updateSql);  
            updateStmt.setInt(1, bookId);  
            updateStmt.executeUpdate();   
            String insertSql = "INSERT INTO stock (id, title, author, price, is_available) VALUES (?, ?, ?, ?, false)";  
            PreparedStatement insertStmt = conn.prepareStatement(insertSql);  
            insertStmt.setInt(1, bookId);  
            insertStmt.setString(2, title);  
            insertStmt.setString(3, author);  
            insertStmt.setDouble(4, price);  
            insertStmt.executeUpdate();  
            System.out.println("Book " + bookId + " borrowed successfully and recorded in stock.");  
        } else {  
            System.out.println("Book is not available for borrowing.");  
        }  
    }  
}
