package project;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
public class AdminDatabaseManager {
private Connection conn;
private Connection userConn;
public void connect() throws SQLException {
String url1 = "jdbc:mysql://localhost:3306/admin_orders";
String url2 = "jdbc:mysql://localhost:3306/user_receive";
String user = "root";
String pass = "sahana@123";
conn = DriverManager.getConnection(url1, user, pass);
userConn = DriverManager.getConnection(url2, user, pass);
System.out.println("Admin and user database connections established.");
}
public void addBook(int id, String title, String author, double price) throws SQLException {
String sql = "INSERT INTO collect (id, title, author, price, is_available) VALUES (?, ?, ?, ?, true)";
PreparedStatement stmt = conn.prepareStatement(sql);
stmt.setInt(1, id);
stmt.setString(2, title);
stmt.setString(3, author);
stmt.setDouble(4, price);
stmt.executeUpdate();
try {
String mirrorSql = "INSERT INTO stock (id, title, author, price, is_available) VALUES (?, ?, ?, ?, true)";
PreparedStatement mirrorStmt = userConn.prepareStatement(mirrorSql);
mirrorStmt.setInt(1, id);
mirrorStmt.setString(2, title);
mirrorStmt.setString(3, author);
mirrorStmt.setDouble(4, price);
mirrorStmt.executeUpdate();
System.out.println("Book added to both admin and user databases.");
} catch (SQLException e) {
System.out.println("Mirror insert failed: " + e.getMessage());
}
}

public void showAllBooks() throws SQLException {  
        String sql = "SELECT * FROM collect";  
         Statement stmt = conn.createStatement();  
             ResultSet rs = stmt.executeQuery(sql) ;  
            System.out.println("\nAdmin Book Inventory:");  
            while (rs.next()) {  
                System.out.println(rs.getInt("id") + ". " + rs.getString("title") +  
                                 " by " + rs.getString("author") +  
                                 " - â‚¹" + rs.getDouble("price") +  
                                 " (" + (rs.getBoolean("is_available") ? "Available" : "Checked Out") + ")");  
            }  
        }  
    }
